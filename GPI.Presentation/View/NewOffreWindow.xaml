<Window x:Class="GPI.Presentation.View.NewOffreWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GPI.Presentation.View"
        xmlns:helpers="clr-namespace:GPI.Presentation.Mvvm"
        xmlns:views="clr-namespace:GPI.Presentation.View"
        WindowStartupLocation="CenterOwner"
        mc:Ignorable="d"
        Title="Nouvelle Offre" Height="600" Width="600"  Background="WhiteSmoke">
    <Window.Resources>
        <helpers:NotEmptyStringRule x:Key="NotEmptyString" ValidatesOnTargetUpdated="True"></helpers:NotEmptyStringRule>
        <Style x:Key="ErrorStyle" TargetType="{x:Type Control}">

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>

        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Width="150" Margin="35,30,0,0">
            <Label Content="Type de bien :" FontWeight="SemiBold" ></Label>
            <ComboBox  Background="FloralWhite" IsTextSearchEnabled="True" ItemsSource="{Binding Path=TypesImmobilier}">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedType" ValidatesOnDataErrors="True" 
                         Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <helpers:NotEmptyComboBoxRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="0" Width="150" Margin="30,30,0,0">
            <Label Content="Surface :" FontWeight="SemiBold" ></Label>
            <TextBox x:Name="Surface">
                <Binding Path="CurrentOffre.Surface" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <helpers:DecimalValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label FontSize="9" Target="{Binding ElementName=Surface}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=Surface}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Surface}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Surface}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row="0" Width="150" Margin="30,30,0,0">
            <Label Content="Nbr de pieces :" FontWeight="SemiBold" ></Label>
            <TextBox x:Name="Pieces">
                <Binding Path="CurrentOffre.Pieces" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <helpers:DecimalValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label FontSize="9" Target="{Binding ElementName=Pieces}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=Pieces}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Pieces}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Pieces}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            
        </StackPanel>
        <StackPanel Grid.Column="0" Grid.Row="1" Width="150" Margin="35,30,0,0">
            <Label Content="Etage :" FontWeight="SemiBold" ></Label>
            <TextBox x:Name="Etage">
                <Binding Path="CurrentOffre.Etage" UpdateSourceTrigger="PropertyChanged">
                    
                </Binding>
            </TextBox>
            <Label FontSize="9" Target="{Binding ElementName=Etage}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=Etage}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Etage}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Etage}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Width="150" Margin="30,30,0,0">
            <Label Content="Nbr d'étages :" FontWeight="SemiBold" ></Label>
            <TextBox x:Name="Nombre_Etages">
                <Binding Path="CurrentOffre.Nombre_Etages" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <helpers:IntValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label FontSize="9" Target="{Binding ElementName=Nombre_Etages}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=Nombre_Etages}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Nombre_Etages}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Nombre_Etages}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row="1" Width="150" Margin="30,30,0,0">
            <Label Content="Prix:" FontWeight="SemiBold"></Label>
            <TextBox x:Name="Prix">
                <Binding Path="CurrentOffre.Prix" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <helpers:DecimalValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label FontSize="9" Target="{Binding ElementName=Prix}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=Prix}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Prix}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=Prix}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="0" Grid.Row ="2"  Grid.ColumnSpan="2" Margin="35,30,0,0">
            <Label Content="Rue :" FontWeight="SemiBold"></Label>
            <TextBox x:Name="TBRue">
                <Binding Path="CurrentOffre.Rue" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <helpers:NotEmptyStringRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
                
            </TextBox>
            <Label x:Name="ErrorLabel" FontSize="9" Target="{Binding ElementName=TBRue}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TBRue}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBRue}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBRue}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row ="2" Margin="30,30,0,0">
            <Label Content="NPA :" FontWeight="SemiBold"></Label>
            <TextBox x:Name="TBNpa">
                <Binding Path="CurrentOffre.Npa">
                <Binding.ValidationRules>
                    <helpers:NotEmptyStringRule ValidatesOnTargetUpdated="True"/>
                </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label x:Name="ErrorLabel2" FontSize="9" Target="{Binding ElementName=TBNpa}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TBNpa}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBNpa}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBNpa}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="0" Grid.Row ="3" Margin="35,30,0,0">
            <Label Content="Localité :" FontWeight="SemiBold"></Label>
            <TextBox x:Name="TBLocalite">
                <Binding Path="CurrentOffre.Localite" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <helpers:NotEmptyStringRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
            <Label x:Name="ErrorLabel3" FontSize="9" Target="{Binding ElementName=TBLocalite}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TBLocalite}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Content" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBLocalite}"/>
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, ElementName=TBLocalite}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row ="3" Margin="30,30,0,0">
            <Label Content="Région :" FontWeight="SemiBold" Width="150"></Label>
            <ComboBox ItemsSource="{Binding Path=ListeRegions}" Margin="1">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedRegion" ValidatesOnDataErrors="True" 
                         Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <helpers:NotEmptyComboBoxRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="35,30,0,0">
            <Label Content="Vendeur :" FontWeight="SemiBold"></Label>
            <ComboBox Margin="1" ItemsSource="{Binding Path=ListeVendeur}">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedVendeur" ValidatesOnDataErrors="True" 
                         Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <helpers:NotEmptyComboBoxRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Column="3" Grid.Row="3" Width="150" Margin="30,30,0,0">
            <Label Content="Actuel :" FontWeight="SemiBold" ></Label>
            <CheckBox Margin="40,2,2,2" x:Name="CheckBoxIsActuel" 
                      Command="{Binding CheckBoxIsChecked}" 
                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"></CheckBox>
        </StackPanel>
        <Button Grid.Column="2" Grid.Row="5" Height="20"
                Content="Enregistrer" Command="{Binding NewOffreSaveCommand}" Margin="10,50,10,10"></Button>
        <Button  Height="20" Grid.Row="5" Grid.Column="1" 
                    Content="Annuler" Click="Annuler_Click"
                    Margin="10,50,10,10"></Button>

    </Grid>
</Window>
